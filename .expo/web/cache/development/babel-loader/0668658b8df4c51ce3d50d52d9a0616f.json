{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Snackbar } from 'react-native-paper';\nimport config from \"../../config/config\";\nimport styles from \"./styles\";\nimport lock from \"../../assets/img/lock.png\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ForgotPassword = function ForgotPassword(props) {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      successVisible = _useState4[0],\n      setSuccessVisible = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      errorVisible = _useState6[0],\n      setErrorVisible = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      msg = _useState8[0],\n      setMsg = _useState8[1];\n\n  var onToggleSuccessSnackBar = function onToggleSuccessSnackBar() {\n    return setSuccessVisible(!successVisible);\n  };\n\n  var onDismissSuccessSnackBar = function onDismissSuccessSnackBar() {\n    return setSuccessVisible(false);\n  };\n\n  var onToggleErrorSnackBar = function onToggleErrorSnackBar() {\n    return setErrorVisible(!errorVisible);\n  };\n\n  var onDismissErrorSnackBar = function onDismissErrorSnackBar() {\n    return setErrorVisible(false);\n  };\n\n  function sendForm() {\n    var response, json;\n    return _regeneratorRuntime.async(function sendForm$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch(config.urlRoot + \"forgotpassword\", {\n              method: 'POST',\n              headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                email: email\n              })\n            }));\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 5:\n            json = _context.sent;\n\n            if (json.success === true) {\n              setSuccessVisible(true);\n              setMsg(json.message);\n            }\n\n            if (json.success === false) {\n              setErrorVisible(true);\n              setMsg(json.message);\n            }\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.containerHeader,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"Forgot password\"\n      }), _jsx(Image, {\n        style: styles.imgLock,\n        source: lock\n      })]\n    }), _jsx(View, {\n      style: styles.containerMessage,\n      children: _jsx(Text, {\n        style: styles.texto,\n        children: \"Enter your email below to receive your password reset instructions\"\n      })\n    }), _jsxs(View, {\n      style: styles.containerInput,\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Your email\",\n        onChangeText: function onChangeText(text) {\n          return setEmail(text);\n        }\n      }), _jsx(TouchableOpacity, {\n        style: styles.resetButton,\n        onPress: function onPress() {\n          return sendForm();\n        },\n        children: _jsx(Text, {\n          style: styles.resetButtonText,\n          children: \"Reset password\"\n        })\n      })]\n    }), _jsx(View, {\n      style: styles.footer,\n      children: _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return props.navigation.navigate('LoginOption');\n        },\n        children: _jsx(Text, {\n          style: styles.textFooter,\n          children: \"I remember the password\"\n        })\n      })\n    }), _jsx(Snackbar, {\n      visible: errorVisible,\n      onDismiss: onDismissErrorSnackBar,\n      action: {\n        label: 'X'\n      },\n      theme: {\n        colors: {\n          onSurface: 'rgba(211, 47, 47, 0.8)',\n          surface: '#fff'\n        },\n        textAlign: 'center'\n      },\n      children: msg\n    }), _jsx(Snackbar, {\n      visible: successVisible,\n      onDismiss: onDismissSuccessSnackBar,\n      action: {\n        label: 'X'\n      },\n      theme: {\n        colors: {\n          onSurface: 'rgba(0, 119, 104, 0.8)',\n          surface: '#fff'\n        },\n        textAlign: 'center'\n      },\n      children: msg\n    })]\n  });\n};\n\nexport default ForgotPassword;","map":{"version":3,"names":["React","useState","Snackbar","config","styles","lock","ForgotPassword","props","email","setEmail","successVisible","setSuccessVisible","errorVisible","setErrorVisible","msg","setMsg","onToggleSuccessSnackBar","onDismissSuccessSnackBar","onToggleErrorSnackBar","onDismissErrorSnackBar","sendForm","fetch","urlRoot","method","headers","Accept","body","JSON","stringify","response","json","success","message","container","containerHeader","title","imgLock","containerMessage","texto","containerInput","input","text","resetButton","resetButtonText","footer","navigation","navigate","textFooter","label","colors","onSurface","surface","textAlign"],"sources":["E:/git_repo/tropical-techcom/front-end/views/ForgotPassword/index.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { View, TouchableOpacity, Text, Image, TextInput } from 'react-native'\r\nimport { Snackbar } from 'react-native-paper'\r\n\r\nimport config from '../../config/config'\r\n\r\nimport { LinearGradient } from 'expo-linear-gradient'\r\n\r\nimport styles from './styles'\r\nimport lock from '../../assets/img/lock.png'\r\n\r\nconst ForgotPassword = (props) => {\r\n  const [email, setEmail] = useState(null)\r\n  const [successVisible, setSuccessVisible] = useState(false)\r\n  const [errorVisible, setErrorVisible] = useState(false)\r\n  const [msg, setMsg] = useState(null)\r\n  const onToggleSuccessSnackBar = () => setSuccessVisible(!successVisible)\r\n  const onDismissSuccessSnackBar = () => setSuccessVisible(false)\r\n  const onToggleErrorSnackBar = () => setErrorVisible(!errorVisible)\r\n  const onDismissErrorSnackBar = () => setErrorVisible(false)\r\n\r\n  //Envio do form de login\r\n  async function sendForm() {\r\n    let response = await fetch(`${config.urlRoot}forgotpassword`, {\r\n      method: 'POST',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        email: email\r\n      })\r\n    })\r\n    let json = await response.json()\r\n    if (json.success === true) {\r\n      setSuccessVisible(true)\r\n      setMsg(json.message)\r\n    }\r\n    if (json.success === false) {\r\n      setErrorVisible(true)\r\n      setMsg(json.message)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.containerHeader}>\r\n        <Text style={styles.title}>Forgot password</Text>\r\n        <Image style={styles.imgLock} source={lock} />\r\n      </View>\r\n\r\n      <View style={styles.containerMessage}>\r\n        <Text style={styles.texto}>\r\n          Enter your email below to receive your password reset instructions\r\n        </Text>\r\n      </View>\r\n      <View style={styles.containerInput}>\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Your email\"\r\n          onChangeText={(text) => setEmail(text)}\r\n        />\r\n        <TouchableOpacity style={styles.resetButton} onPress={() => sendForm()}>\r\n          <Text style={styles.resetButtonText}>Reset password</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      <View style={styles.footer}>\r\n        <TouchableOpacity onPress={() => props.navigation.navigate('LoginOption')}>\r\n          <Text style={styles.textFooter}>I remember the password</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      <Snackbar\r\n        visible={errorVisible}\r\n        onDismiss={onDismissErrorSnackBar}\r\n        action={{\r\n          label: 'X'\r\n        }}\r\n        theme={{\r\n          colors: {\r\n            onSurface: 'rgba(211, 47, 47, 0.8)',\r\n            surface: '#fff'\r\n          },\r\n          textAlign: 'center'\r\n        }}\r\n      >\r\n        {msg}\r\n      </Snackbar>\r\n\r\n      <Snackbar\r\n        visible={successVisible}\r\n        onDismiss={onDismissSuccessSnackBar}\r\n        action={{\r\n          label: 'X'\r\n        }}\r\n        theme={{\r\n          colors: {\r\n            onSurface: 'rgba(0, 119, 104, 0.8)',\r\n            surface: '#fff'\r\n          },\r\n          textAlign: 'center'\r\n        }}\r\n      >\r\n        {msg}\r\n      </Snackbar>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default ForgotPassword\r\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA2C,OAA3C;;;;;;AAEA,SAASC,QAAT,QAAyB,oBAAzB;AAEA,OAAOC,MAAP;AAIA,OAAOC,MAAP;AACA,OAAOC,IAAP;;;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAW;EAChC,gBAA0BN,QAAQ,CAAC,IAAD,CAAlC;EAAA;EAAA,IAAOO,KAAP;EAAA,IAAcC,QAAd;;EACA,iBAA4CR,QAAQ,CAAC,KAAD,CAApD;EAAA;EAAA,IAAOS,cAAP;EAAA,IAAuBC,iBAAvB;;EACA,iBAAwCV,QAAQ,CAAC,KAAD,CAAhD;EAAA;EAAA,IAAOW,YAAP;EAAA,IAAqBC,eAArB;;EACA,iBAAsBZ,QAAQ,CAAC,IAAD,CAA9B;EAAA;EAAA,IAAOa,GAAP;EAAA,IAAYC,MAAZ;;EACA,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B;IAAA,OAAML,iBAAiB,CAAC,CAACD,cAAF,CAAvB;EAAA,CAAhC;;EACA,IAAMO,wBAAwB,GAAG,SAA3BA,wBAA2B;IAAA,OAAMN,iBAAiB,CAAC,KAAD,CAAvB;EAAA,CAAjC;;EACA,IAAMO,qBAAqB,GAAG,SAAxBA,qBAAwB;IAAA,OAAML,eAAe,CAAC,CAACD,YAAF,CAArB;EAAA,CAA9B;;EACA,IAAMO,sBAAsB,GAAG,SAAzBA,sBAAyB;IAAA,OAAMN,eAAe,CAAC,KAAD,CAArB;EAAA,CAA/B;;EAGA,SAAeO,QAAf;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,iCACuBC,KAAK,CAAIlB,MAAM,CAACmB,OAAX,qBAAoC;cAC5DC,MAAM,EAAE,MADoD;cAE5DC,OAAO,EAAE;gBACPC,MAAM,EAAE,kBADD;gBAEP,gBAAgB;cAFT,CAFmD;cAM5DC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;gBACnBpB,KAAK,EAAEA;cADY,CAAf;YANsD,CAApC,CAD5B;;UAAA;YACMqB,QADN;YAAA;YAAA,iCAWmBA,QAAQ,CAACC,IAAT,EAXnB;;UAAA;YAWMA,IAXN;;YAYE,IAAIA,IAAI,CAACC,OAAL,KAAiB,IAArB,EAA2B;cACzBpB,iBAAiB,CAAC,IAAD,CAAjB;cACAI,MAAM,CAACe,IAAI,CAACE,OAAN,CAAN;YACD;;YACD,IAAIF,IAAI,CAACC,OAAL,KAAiB,KAArB,EAA4B;cAC1BlB,eAAe,CAAC,IAAD,CAAf;cACAE,MAAM,CAACe,IAAI,CAACE,OAAN,CAAN;YACD;;UAnBH;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA;;EAsBA,OACE,MAAC,IAAD;IAAM,KAAK,EAAE5B,MAAM,CAAC6B,SAApB;IAAA,WACE,MAAC,IAAD;MAAM,KAAK,EAAE7B,MAAM,CAAC8B,eAApB;MAAA,WACE,KAAC,IAAD;QAAM,KAAK,EAAE9B,MAAM,CAAC+B,KAApB;QAAA;MAAA,EADF,EAEE,KAAC,KAAD;QAAO,KAAK,EAAE/B,MAAM,CAACgC,OAArB;QAA8B,MAAM,EAAE/B;MAAtC,EAFF;IAAA,EADF,EAME,KAAC,IAAD;MAAM,KAAK,EAAED,MAAM,CAACiC,gBAApB;MAAA,UACE,KAAC,IAAD;QAAM,KAAK,EAAEjC,MAAM,CAACkC,KAApB;QAAA;MAAA;IADF,EANF,EAWE,MAAC,IAAD;MAAM,KAAK,EAAElC,MAAM,CAACmC,cAApB;MAAA,WACE,KAAC,SAAD;QACE,KAAK,EAAEnC,MAAM,CAACoC,KADhB;QAEE,WAAW,EAAC,YAFd;QAGE,YAAY,EAAE,sBAACC,IAAD;UAAA,OAAUhC,QAAQ,CAACgC,IAAD,CAAlB;QAAA;MAHhB,EADF,EAME,KAAC,gBAAD;QAAkB,KAAK,EAAErC,MAAM,CAACsC,WAAhC;QAA6C,OAAO,EAAE;UAAA,OAAMtB,QAAQ,EAAd;QAAA,CAAtD;QAAA,UACE,KAAC,IAAD;UAAM,KAAK,EAAEhB,MAAM,CAACuC,eAApB;UAAA;QAAA;MADF,EANF;IAAA,EAXF,EAqBE,KAAC,IAAD;MAAM,KAAK,EAAEvC,MAAM,CAACwC,MAApB;MAAA,UACE,KAAC,gBAAD;QAAkB,OAAO,EAAE;UAAA,OAAMrC,KAAK,CAACsC,UAAN,CAAiBC,QAAjB,CAA0B,aAA1B,CAAN;QAAA,CAA3B;QAAA,UACE,KAAC,IAAD;UAAM,KAAK,EAAE1C,MAAM,CAAC2C,UAApB;UAAA;QAAA;MADF;IADF,EArBF,EA0BE,KAAC,QAAD;MACE,OAAO,EAAEnC,YADX;MAEE,SAAS,EAAEO,sBAFb;MAGE,MAAM,EAAE;QACN6B,KAAK,EAAE;MADD,CAHV;MAME,KAAK,EAAE;QACLC,MAAM,EAAE;UACNC,SAAS,EAAE,wBADL;UAENC,OAAO,EAAE;QAFH,CADH;QAKLC,SAAS,EAAE;MALN,CANT;MAAA,UAcGtC;IAdH,EA1BF,EA2CE,KAAC,QAAD;MACE,OAAO,EAAEJ,cADX;MAEE,SAAS,EAAEO,wBAFb;MAGE,MAAM,EAAE;QACN+B,KAAK,EAAE;MADD,CAHV;MAME,KAAK,EAAE;QACLC,MAAM,EAAE;UACNC,SAAS,EAAE,wBADL;UAENC,OAAO,EAAE;QAFH,CADH;QAKLC,SAAS,EAAE;MALN,CANT;MAAA,UAcGtC;IAdH,EA3CF;EAAA,EADF;AA8DD,CA/FD;;AAiGA,eAAeR,cAAf"},"metadata":{},"sourceType":"module"}