{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { SecurityLevel } from \"./LocalAuthentication.types\";\nexport default {\n  get name() {\n    return 'ExpoLocalAuthentication';\n  },\n\n  hasHardwareAsync: function hasHardwareAsync() {\n    return function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", false);\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }();\n  },\n  isEnrolledAsync: function isEnrolledAsync() {\n    return function _callee2() {\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.abrupt(\"return\", false);\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }();\n  },\n  getEnrolledLevelAsync: function getEnrolledLevelAsync() {\n    return function _callee3() {\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              return _context3.abrupt(\"return\", SecurityLevel.NONE);\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }();\n  },\n  supportedAuthenticationTypesAsync: function supportedAuthenticationTypesAsync() {\n    return function _callee4() {\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              return _context4.abrupt(\"return\", []);\n\n            case 1:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }();\n  }\n};","map":{"version":3,"mappings":";AAAA,SAA6BA,aAA7B;AAEA,eAAe;EACb,IAAIC,IAAJ,GAAQ;IACN,OAAO,yBAAP;EACD,CAHY;;EAIPC,gBAJO,8BAIS;IAAA;MAAA;QAAA;UAAA;YAAA;cAAA,iCACb,KADa;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EAErB,CANY;EAOPC,eAPO,6BAOQ;IAAA;MAAA;QAAA;UAAA;YAAA;cAAA,kCACZ,KADY;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EAEpB,CATY;EAUPC,qBAVO,mCAUc;IAAA;MAAA;QAAA;UAAA;YAAA;cAAA,kCAClBJ,aAAa,CAACK,IADI;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EAE1B,CAZY;EAaPC,iCAbO,+CAa0B;IAAA;MAAA;QAAA;UAAA;YAAA;cAAA,kCAC9B,EAD8B;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EAEtC;AAfY,CAAf","names":["SecurityLevel","name","hasHardwareAsync","isEnrolledAsync","getEnrolledLevelAsync","NONE","supportedAuthenticationTypesAsync"],"sourceRoot":"","sources":["../src/ExpoLocalAuthentication.web.ts"],"sourcesContent":["import { AuthenticationType, SecurityLevel } from './LocalAuthentication.types';\n\nexport default {\n  get name(): string {\n    return 'ExpoLocalAuthentication';\n  },\n  async hasHardwareAsync(): Promise<boolean> {\n    return false;\n  },\n  async isEnrolledAsync(): Promise<boolean> {\n    return false;\n  },\n  async getEnrolledLevelAsync(): Promise<SecurityLevel> {\n    return SecurityLevel.NONE;\n  },\n  async supportedAuthenticationTypesAsync(): Promise<AuthenticationType[]> {\n    return [];\n  },\n};\n"]},"metadata":{},"sourceType":"module"}