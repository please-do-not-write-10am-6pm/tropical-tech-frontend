{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { useFonts } from 'expo-font';\nimport Navigation from \"./Navigation\";\nimport Constants from 'expo-constants';\nimport { RecoilRoot } from 'recoil';\nimport AppLoading from 'expo-app-loading';\nimport { DefaultTheme } from 'react-native-paper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar App = function App(props) {\n  var _useFonts = useFonts({\n    'Corbel-Bold': require(\"./assets/fonts/corbel-bold.ttf\"),\n    'Corbel-Italic': require(\"./assets/fonts/corbeli.ttf\"),\n    Corbel: require(\"./assets/fonts/corbel.ttf\")\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fontsLoaded = _useFonts2[0];\n\n  var theme = _objectSpread({}, DefaultTheme);\n\n  if (!fontsLoaded) {\n    return _jsx(AppLoading, {});\n  } else {\n    return _jsxs(_Fragment, {\n      children: [_jsx(View, {\n        style: {\n          marginTop: Constants.statusBarHeight\n        }\n      }), _jsx(RecoilRoot, {\n        children: _jsx(Navigation, {})\n      })]\n    });\n  }\n};\n\nexport default App;","map":{"version":3,"names":["React","useFonts","Navigation","Constants","RecoilRoot","AppLoading","DefaultTheme","App","props","require","Corbel","fontsLoaded","theme","marginTop","statusBarHeight"],"sources":["E:/git_repo/tropical-techcom/front-end/App.tsx"],"sourcesContent":["//import { AppLoading } from 'expo';\r\nimport React from 'react'\r\nimport { View } from 'react-native'\r\nimport { useFonts } from 'expo-font'\r\nimport Navigation from './Navigation'\r\nimport Constants from 'expo-constants'\r\nimport { StatusBar } from 'expo-status-bar'\r\nimport { RecoilRoot } from 'recoil'\r\nimport AppLoading from 'expo-app-loading'\r\nimport { configureFonts, DefaultTheme, Provider as PaperProvider } from 'react-native-paper'\r\n\r\nconst App = (props) => {\r\n  const [fontsLoaded] = useFonts({\r\n    'Corbel-Bold': require('./assets/fonts/corbel-bold.ttf'),\r\n    'Corbel-Italic': require('./assets/fonts/corbeli.ttf'),\r\n    Corbel: require('./assets/fonts/corbel.ttf')\r\n  })\r\n\r\n  const theme = {\r\n    ...DefaultTheme\r\n  }\r\n\r\n  if (!fontsLoaded) {\r\n    return <AppLoading />\r\n  } else {\r\n    return (\r\n      <>\r\n        {/* <StatusBar style=\"auto\" /> */}\r\n        <View style={{ marginTop: Constants.statusBarHeight }} />\r\n        <RecoilRoot>\r\n          <Navigation />\r\n        </RecoilRoot>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n"],"mappings":";;;;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,QAAT,QAAyB,WAAzB;AACA,OAAOC,UAAP;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AAEA,SAASC,UAAT,QAA2B,QAA3B;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,SAAyBC,YAAzB,QAAwE,oBAAxE;;;;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,CAACC,KAAD,EAAW;EACrB,gBAAsBP,QAAQ,CAAC;IAC7B,eAAeQ,OAAO,kCADO;IAE7B,iBAAiBA,OAAO,8BAFK;IAG7BC,MAAM,EAAED,OAAO;EAHc,CAAD,CAA9B;EAAA;EAAA,IAAOE,WAAP;;EAMA,IAAMC,KAAK,qBACNN,YADM,CAAX;;EAIA,IAAI,CAACK,WAAL,EAAkB;IAChB,OAAO,KAAC,UAAD,KAAP;EACD,CAFD,MAEO;IACL,OACE;MAAA,WAEE,KAAC,IAAD;QAAM,KAAK,EAAE;UAAEE,SAAS,EAAEV,SAAS,CAACW;QAAvB;MAAb,EAFF,EAGE,KAAC,UAAD;QAAA,UACE,KAAC,UAAD;MADF,EAHF;IAAA,EADF;EASD;AACF,CAxBD;;AA0BA,eAAeP,GAAf"},"metadata":{},"sourceType":"module"}