{"ast":null,"code":"import { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport logo from \"../assets/img/logo.png\";\nimport styles from \"../assets/css/index\";\nimport { ForgotPassword, Home, LoginOption, LoginPasscode, LoginTouch, Signin, Signup, SignupComplete, SignupStep1, SignupStep2, SignupStep3, SignupStep4, VerificationCode, Welcome } from \"../views\";\nimport Offers from \"../Screens/Offers\";\nimport HotelDetails from \"../Screens/HotelDetails\";\nimport ConfirmPayment from \"../Screens/ConfirmPayment\";\nimport ReservationAccepted from \"../Screens/ReservationAccepted\";\nimport Trips from \"../Screens/Trips\";\nimport Account from \"../Screens/Account\";\nimport Credits from \"../Screens/Credits\";\nimport ManagePayment from \"../Screens/ManagePayment\";\nimport PayWith from \"../Screens/ManagePayment/PayWith\";\nimport CardDetails from \"../Screens/ManagePayment/CardDetails\";\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\nimport COLORS from \"../Constants/styles\";\nimport { IconButton } from 'react-native-paper';\nimport Saved from \"../Screens/Saved\";\nimport Onboarding from \"../Screens/Onboarding\";\nimport { useRecoilValue } from 'recoil';\nimport FirstAccess from \"../assets/atoms/FirstAccess\";\nimport Maps from \"../Screens/Maps\";\nimport SelectCardDefault from \"../Screens/ManagePayment/SelectCardDefault\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar HomeNavigator = createMaterialTopTabNavigator();\n\nvar HomeTabScreen = function HomeTabScreen() {\n  return _jsxs(_Fragment, {\n    children: [_jsx(View, {\n      style: styles.containerLogo,\n      children: _jsx(Image, {\n        source: logo,\n        style: styles.logo\n      })\n    }), _jsxs(HomeNavigator.Navigator, {\n      screenOptions: function screenOptions(_ref) {\n        var route = _ref.route;\n        return {\n          headerShown: false,\n          tabBarPressColor: COLORS.primary,\n          swipeEnabled: false,\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var focused = _ref2.focused;\n            var iconName;\n\n            if (route.name === 'Home') {\n              iconName = 'home-outline';\n            } else if (route.name === 'Offers') {\n              iconName = 'tag-outline';\n            } else if (route.name === 'Trips') {\n              iconName = 'wallet-travel';\n            } else if (route.name === 'Saved') {\n              iconName = 'star-outline';\n            } else if (route.name === 'Account') {\n              iconName = 'wallet-outline';\n            }\n\n            return _jsx(IconButton, {\n              icon: iconName,\n              color: focused ? COLORS.error : 'white',\n              style: {\n                margin: 0\n              }\n            });\n          },\n          tabBarActiveTintColor: COLORS.error,\n          tabBarInactiveTintColor: COLORS.primary,\n          tabBarContentContainerStyle: {\n            justifyContent: 'center'\n          },\n          tabBarStyle: {\n            backgroundColor: COLORS.primary,\n            width: '100%',\n            height: 100\n          },\n          tabBarIconStyle: {\n            marginLeft: 0\n          },\n          tabBarShowLabel: true,\n          tabBarLabelStyle: {\n            color: 'white',\n            width: '100%'\n          },\n          tabBarIndicatorStyle: {\n            width: 0\n          },\n          tabBarItemStyle: {\n            width: '150%',\n            marginLeft: 0,\n            alignSelf: 'center'\n          }\n        };\n      },\n      children: [_jsx(HomeNavigator.Screen, {\n        name: \"Home\",\n        component: Home\n      }), _jsx(HomeNavigator.Screen, {\n        name: \"Offers\",\n        component: OffersFlow\n      }), _jsx(HomeNavigator.Screen, {\n        name: \"Trips\",\n        component: Trips\n      }), _jsx(HomeNavigator.Screen, {\n        name: \"Saved\",\n        component: Saved\n      }), _jsx(HomeNavigator.Screen, {\n        name: \"Account\",\n        component: AccountFlow\n      })]\n    })]\n  });\n};\n\nvar OffersFlow = function OffersFlow() {\n  return _jsxs(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"Offer\",\n      component: Offers\n    }), _jsx(Stack.Screen, {\n      name: \"HotelDetails\",\n      component: HotelDetails\n    }), _jsx(Stack.Screen, {\n      name: \"ConfirmPayment\",\n      component: ConfirmPayment\n    }), _jsx(Stack.Screen, {\n      name: \"ReservationAccepted\",\n      component: ReservationAccepted\n    }), _jsx(Stack.Screen, {\n      name: \"Maps\",\n      component: Maps\n    })]\n  });\n};\n\nvar AccountFlow = function AccountFlow() {\n  return _jsxs(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"Profile\",\n      component: Account\n    }), _jsx(Stack.Screen, {\n      name: \"ManagePayment\",\n      component: ManagePayment\n    }), _jsx(Stack.Screen, {\n      name: \"Credits\",\n      component: Credits\n    }), _jsx(Stack.Screen, {\n      name: \"CardDetails\",\n      component: CardDetails\n    }), _jsx(Stack.Screen, {\n      name: \"PayWith\",\n      component: PayWith\n    }), _jsx(Stack.Screen, {\n      name: \"SelectCardDefault\",\n      component: SelectCardDefault\n    })]\n  });\n};\n\nvar LoginFlow = function LoginFlow() {\n  return _jsxs(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"Welcome\",\n      component: Welcome\n    }), _jsx(Stack.Screen, {\n      name: \"Signin\",\n      component: Signin\n    }), _jsx(Stack.Screen, {\n      name: \"LoginPasscode\",\n      component: LoginPasscode\n    }), _jsx(Stack.Screen, {\n      name: \"LoginTouch\",\n      component: LoginTouch\n    }), _jsx(Stack.Screen, {\n      name: \"LoginOption\",\n      component: LoginOption\n    }), _jsx(Stack.Screen, {\n      name: \"ForgotPassword\",\n      component: ForgotPassword\n    }), _jsx(Stack.Screen, {\n      name: \"Signup\",\n      component: Signup\n    }), _jsx(Stack.Screen, {\n      name: \"SignupStep1\",\n      component: SignupStep1\n    }), _jsx(Stack.Screen, {\n      name: \"SignupStep2\",\n      component: SignupStep2\n    }), _jsx(Stack.Screen, {\n      name: \"SignupStep3\",\n      component: SignupStep3\n    }), _jsx(Stack.Screen, {\n      name: \"SignupStep4\",\n      component: SignupStep4\n    }), _jsx(Stack.Screen, {\n      name: \"VerificationCode\",\n      component: VerificationCode\n    }), _jsx(Stack.Screen, {\n      name: \"SignupComplete\",\n      component: SignupComplete\n    })]\n  });\n};\n\nvar Navigation = function Navigation() {\n  var firstAccess = useRecoilValue(FirstAccess);\n\n  if (firstAccess != null && firstAccess.isFirstAccess) {\n    return _jsx(NavigationContainer, {\n      children: _jsx(Stack.Navigator, {\n        screenOptions: {\n          headerShown: false\n        },\n        children: _jsx(Stack.Screen, {\n          name: \"Onboarding\",\n          component: Onboarding,\n          options: {\n            headerShown: false\n          }\n        })\n      })\n    });\n  } else {\n    return _jsx(NavigationContainer, {\n      children: _jsxs(Stack.Navigator, {\n        screenOptions: {\n          headerShown: false\n        },\n        children: [_jsx(Stack.Screen, {\n          name: \"HomeNav\",\n          component: HomeTabScreen,\n          options: {\n            headerShown: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"LoginRegisterFlow\",\n          component: LoginFlow\n        })]\n      })\n    });\n  }\n};\n\nexport default Navigation;","map":{"version":3,"names":["NavigationContainer","createNativeStackNavigator","React","logo","styles","ForgotPassword","Home","LoginOption","LoginPasscode","LoginTouch","Signin","Signup","SignupComplete","SignupStep1","SignupStep2","SignupStep3","SignupStep4","VerificationCode","Welcome","Offers","HotelDetails","ConfirmPayment","ReservationAccepted","Trips","Account","Credits","ManagePayment","PayWith","CardDetails","createMaterialTopTabNavigator","COLORS","IconButton","Saved","Onboarding","useRecoilValue","FirstAccess","Maps","SelectCardDefault","Stack","HomeNavigator","HomeTabScreen","containerLogo","route","headerShown","tabBarPressColor","primary","swipeEnabled","tabBarIcon","focused","iconName","name","error","margin","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarContentContainerStyle","justifyContent","tabBarStyle","backgroundColor","width","height","tabBarIconStyle","marginLeft","tabBarShowLabel","tabBarLabelStyle","color","tabBarIndicatorStyle","tabBarItemStyle","alignSelf","OffersFlow","AccountFlow","LoginFlow","Navigation","firstAccess","isFirstAccess"],"sources":["E:/git_repo/tropical-techcom/front-end/Navigation/index.tsx"],"sourcesContent":["import { NavigationContainer } from '@react-navigation/native'\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack'\r\nimport React from 'react'\r\nimport { Image, View } from 'react-native'\r\nimport logo from '../assets/img/logo.png'\r\nimport styles from '../assets/css/index'\r\nimport {\r\n  ForgotPassword,\r\n  Home,\r\n  LoginOption,\r\n  LoginPasscode,\r\n  LoginTouch,\r\n  Signin,\r\n  Signup,\r\n  SignupComplete,\r\n  SignupStep1,\r\n  SignupStep2,\r\n  SignupStep3,\r\n  SignupStep4,\r\n  VerificationCode,\r\n  Welcome\r\n} from '../views'\r\nimport Offers from '../Screens/Offers'\r\nimport HotelDetails from '../Screens/HotelDetails'\r\nimport ConfirmPayment from '../Screens/ConfirmPayment'\r\nimport ReservationAccepted from '../Screens/ReservationAccepted'\r\nimport Trips from '../Screens/Trips'\r\nimport Account from '../Screens/Account'\r\nimport Credits from '../Screens/Credits'\r\nimport ManagePayment from '../Screens/ManagePayment'\r\nimport PayWith from '../Screens/ManagePayment/PayWith'\r\nimport CardDetails from '../Screens/ManagePayment/CardDetails'\r\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs'\r\nimport COLORS from '../Constants/styles'\r\nimport { IconButton } from 'react-native-paper'\r\nimport Saved from '../Screens/Saved'\r\nimport Onboarding from '../Screens/Onboarding'\r\nimport { useRecoilValue } from 'recoil'\r\nimport FirstAccess from '../assets/atoms/FirstAccess'\r\nimport Maps from '../Screens/Maps'\r\nimport SelectCardDefault from '../Screens/ManagePayment/SelectCardDefault'\r\n\r\n// import { Container } from './styles';\r\nconst Stack = createNativeStackNavigator()\r\nconst HomeNavigator = createMaterialTopTabNavigator()\r\nconst HomeTabScreen = () => {\r\n  return (\r\n    <>\r\n      <View style={styles.containerLogo}>\r\n        <Image source={logo} style={styles.logo} />\r\n      </View>\r\n      <HomeNavigator.Navigator\r\n        screenOptions={({ route }) => ({\r\n          headerShown: false,\r\n          tabBarPressColor: COLORS.primary,\r\n          swipeEnabled: false,\r\n          tabBarIcon: ({ focused }) => {\r\n            let iconName\r\n\r\n            if (route.name === 'Home') {\r\n              iconName = 'home-outline'\r\n            } else if (route.name === 'Offers') {\r\n              iconName = 'tag-outline'\r\n            } else if (route.name === 'Trips') {\r\n              iconName = 'wallet-travel'\r\n            } else if (route.name === 'Saved') {\r\n              iconName = 'star-outline'\r\n            } else if (route.name === 'Account') {\r\n              iconName = 'wallet-outline'\r\n            }\r\n\r\n            return (\r\n              <IconButton\r\n                icon={iconName}\r\n                color={focused ? COLORS.error : 'white'}\r\n                style={{ margin: 0 }}\r\n              />\r\n            )\r\n          },\r\n\r\n          \r\n          tabBarActiveTintColor: COLORS.error,\r\n          tabBarInactiveTintColor: COLORS.primary,\r\n          tabBarContentContainerStyle: { justifyContent: 'center' },\r\n          tabBarStyle: { backgroundColor: COLORS.primary, width: '100%', height: 100 },\r\n          tabBarIconStyle: { marginLeft: 0 },\r\n          tabBarShowLabel: true,\r\n          tabBarLabelStyle: { color: 'white', width: '100%' },\r\n          tabBarIndicatorStyle: { width: 0 },\r\n          tabBarItemStyle: {\r\n            width: '150%',\r\n            marginLeft: 0,\r\n            alignSelf: 'center'\r\n          }\r\n        })}\r\n      >\r\n        <HomeNavigator.Screen name=\"Home\" component={Home} />\r\n        <HomeNavigator.Screen name=\"Offers\" component={OffersFlow} />\r\n        <HomeNavigator.Screen name=\"Trips\" component={Trips} />\r\n        <HomeNavigator.Screen name=\"Saved\" component={Saved} />\r\n        <HomeNavigator.Screen name=\"Account\" component={AccountFlow} />\r\n      </HomeNavigator.Navigator>\r\n    </>\r\n  )\r\n}\r\n\r\nconst OffersFlow = () => {\r\n  return (\r\n    <Stack.Navigator screenOptions={{ headerShown: false }}>\r\n      <Stack.Screen name=\"Offer\" component={Offers} />\r\n      <Stack.Screen name=\"HotelDetails\" component={HotelDetails} />\r\n      <Stack.Screen name=\"ConfirmPayment\" component={ConfirmPayment} />\r\n      <Stack.Screen name=\"ReservationAccepted\" component={ReservationAccepted} />\r\n      <Stack.Screen name=\"Maps\" component={Maps} />\r\n    </Stack.Navigator>\r\n  )\r\n}\r\n\r\nconst AccountFlow = () => {\r\n  return (\r\n    <Stack.Navigator screenOptions={{ headerShown: false }}>\r\n      <Stack.Screen name=\"Profile\" component={Account} />\r\n      <Stack.Screen name=\"ManagePayment\" component={ManagePayment} />\r\n      <Stack.Screen name=\"Credits\" component={Credits} />\r\n      <Stack.Screen name=\"CardDetails\" component={CardDetails} />\r\n      <Stack.Screen name=\"PayWith\" component={PayWith} />\r\n      <Stack.Screen name=\"SelectCardDefault\" component={SelectCardDefault} />\r\n    </Stack.Navigator>\r\n  )\r\n}\r\n\r\nconst LoginFlow = () => {\r\n  return (\r\n    <Stack.Navigator screenOptions={{ headerShown: false }}>\r\n      <Stack.Screen name=\"Welcome\" component={Welcome} />\r\n      <Stack.Screen name=\"Signin\" component={Signin} />\r\n      <Stack.Screen name=\"LoginPasscode\" component={LoginPasscode} />\r\n      <Stack.Screen name=\"LoginTouch\" component={LoginTouch} />\r\n      <Stack.Screen name=\"LoginOption\" component={LoginOption} />\r\n      <Stack.Screen name=\"ForgotPassword\" component={ForgotPassword} />\r\n      <Stack.Screen name=\"Signup\" component={Signup} />\r\n      <Stack.Screen name=\"SignupStep1\" component={SignupStep1} />\r\n      <Stack.Screen name=\"SignupStep2\" component={SignupStep2} />\r\n      <Stack.Screen name=\"SignupStep3\" component={SignupStep3} />\r\n      <Stack.Screen name=\"SignupStep4\" component={SignupStep4} />\r\n      <Stack.Screen name=\"VerificationCode\" component={VerificationCode} />\r\n      <Stack.Screen name=\"SignupComplete\" component={SignupComplete} />\r\n    </Stack.Navigator>\r\n  )\r\n}\r\n\r\nconst Navigation = () => {\r\n  const firstAccess = useRecoilValue(FirstAccess)\r\n\r\n  if (firstAccess?.isFirstAccess) {\r\n    return (\r\n      <NavigationContainer>\r\n        <Stack.Navigator screenOptions={{ headerShown: false }}>\r\n          <Stack.Screen name=\"Onboarding\" component={Onboarding} options={{ headerShown: false }} />\r\n        </Stack.Navigator>\r\n      </NavigationContainer>\r\n    )\r\n  } else {\r\n    return (\r\n      <NavigationContainer>\r\n        <Stack.Navigator screenOptions={{ headerShown: false }}>\r\n          <Stack.Screen name=\"HomeNav\" component={HomeTabScreen} options={{ headerShown: false }} />\r\n          <Stack.Screen name=\"LoginRegisterFlow\" component={LoginFlow} />\r\n        </Stack.Navigator>\r\n      </NavigationContainer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Navigation\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}