{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { IconButton } from 'react-native-paper';\nimport { useRecoilState } from 'recoil';\nimport UserData from \"../../../assets/atoms/UserData\";\nimport MasterCardIcon from \"../../../assets/icons/MasterCard\";\nimport Switch from \"../../../Components/Switch\";\nimport COLORS from \"../../../Constants/styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar SelectCardDefault = function SelectCardDefault(_ref) {\n  var _route$params;\n\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useRecoilState = useRecoilState(UserData),\n      _useRecoilState2 = _slicedToArray(_useRecoilState, 2),\n      userData = _useRecoilState2[0],\n      setUserData = _useRecoilState2[1];\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      defaultValue = _useState2[0],\n      setDefaultValue = _useState2[1];\n\n  var cardId = (_route$params = route.params) == null ? void 0 : _route$params.cardId;\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(IconButton, {\n      icon: 'chevron-left',\n      size: 28,\n      color: '#1B4298',\n      style: styles.chevronLeft,\n      onPress: function onPress() {\n        return navigation.goBack();\n      }\n    }), _jsx(Text, {\n      style: styles.title,\n      children: \"Card \" + (userData == null ? void 0 : userData.creditCard[cardId].cardNumber.slice(15, 19))\n    }), _jsxs(View, {\n      style: styles.cardDetailContainer,\n      children: [_jsx(MasterCardIcon, {}), _jsxs(View, {\n        children: [_jsx(Text, {\n          style: styles.text,\n          children: \"Card \" + (userData == null ? void 0 : userData.creditCard[cardId].cardNumber.slice(15, 19))\n        }), _jsx(Text, {\n          style: styles.text,\n          children: \"\" + (userData == null ? void 0 : userData.creditCard[cardId].expiry)\n        })]\n      })]\n    }), _jsxs(View, {\n      style: styles.setDefault,\n      children: [_jsx(Text, {\n        style: styles.defaultText,\n        children: \"Set as default\"\n      }), _jsx(Switch, {\n        onPress: function onPress() {\n          setDefaultValue(!defaultValue);\n        },\n        isSelected: defaultValue\n      })]\n    }), _jsx(TouchableOpacity, {\n      style: {\n        marginTop: 40\n      },\n      children: _jsx(Text, {\n        style: styles.delete,\n        children: \"Delete\"\n      })\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  cardDetailContainer: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  chevronLeft: {\n    margin: 0,\n    opacity: 0.5,\n    marginTop: 30,\n    marginBottom: 10\n  },\n  container: {\n    marginHorizontal: 22\n  },\n  title: {\n    fontSize: 32,\n    fontFamily: 'Corbel-Bold',\n    marginBottom: 70\n  },\n  text: {\n    fontSize: 16,\n    fontFamily: 'Corbel',\n    marginLeft: 10\n  },\n  delete: {\n    fontFamily: 'Corbel',\n    fontSize: 16,\n    color: COLORS.primary\n  },\n  setDefault: {\n    borderTopWidth: 1,\n    borderBottomWidth: 1,\n    borderTopColor: '#506F9D',\n    borderBottomColor: '#506F9D',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  defaultText: {\n    fontFamily: 'Corbel-Bold',\n    fontSize: 16,\n    paddingVertical: 12\n  }\n});\nexport default SelectCardDefault;","map":{"version":3,"names":["React","useState","IconButton","useRecoilState","UserData","MasterCardIcon","Switch","COLORS","SelectCardDefault","navigation","route","userData","setUserData","defaultValue","setDefaultValue","cardId","params","styles","container","chevronLeft","goBack","title","creditCard","cardNumber","slice","cardDetailContainer","text","expiry","setDefault","defaultText","marginTop","delete","StyleSheet","create","flexDirection","alignItems","margin","opacity","marginBottom","marginHorizontal","fontSize","fontFamily","marginLeft","color","primary","borderTopWidth","borderBottomWidth","borderTopColor","borderBottomColor","justifyContent","paddingVertical"],"sources":["E:/git_repo/tropical-techcom/front-end/Screens/ManagePayment/SelectCardDefault/index.tsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { View, Text, StyleSheet, TouchableOpacity } from 'react-native'\r\nimport { IconButton } from 'react-native-paper'\r\nimport { useRecoilState } from 'recoil'\r\nimport UserData from '../../../assets/atoms/UserData'\r\nimport BankCardIcon from '../../../assets/icons/BankCard'\r\nimport MasterCardIcon from '../../../assets/icons/MasterCard'\r\nimport Switch from '../../../Components/Switch'\r\nimport COLORS from '../../../Constants/styles'\r\n\r\n// import { Container } from './styles';\r\n\r\nconst SelectCardDefault = ({ navigation, route }) => {\r\n  const [userData, setUserData] = useRecoilState(UserData)\r\n  const [defaultValue, setDefaultValue] = useState(false)\r\n  const cardId = route.params?.cardId\r\n  return (\r\n    <View style={styles.container}>\r\n      <IconButton\r\n        icon={'chevron-left'}\r\n        size={28}\r\n        color={'#1B4298'}\r\n        style={styles.chevronLeft}\r\n        onPress={() => navigation.goBack()}\r\n      />\r\n      <Text style={styles.title}>{`Card ${userData?.creditCard[cardId].cardNumber.slice(\r\n        15,\r\n        19\r\n      )}`}</Text>\r\n\r\n      <View style={styles.cardDetailContainer}>\r\n        {/* CardIcon */}\r\n        <MasterCardIcon />\r\n        {/* CARDICON */}\r\n        <View>\r\n          <Text style={styles.text}>{`Card ${userData?.creditCard[cardId].cardNumber.slice(\r\n            15,\r\n            19\r\n          )}`}</Text>\r\n          <Text style={styles.text}>{`${userData?.creditCard[cardId].expiry}`}</Text>\r\n        </View>\r\n      </View>\r\n\r\n      <View style={styles.setDefault}>\r\n        <Text style={styles.defaultText}>Set as default</Text>\r\n        <Switch\r\n          onPress={() => {\r\n            setDefaultValue(!defaultValue)\r\n          }}\r\n          isSelected={defaultValue}\r\n        />\r\n      </View>\r\n      <TouchableOpacity style={{ marginTop: 40 }}>\r\n        <Text style={styles.delete}>Delete</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  cardDetailContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center'\r\n  },\r\n  chevronLeft: {\r\n    margin: 0,\r\n    opacity: 0.5,\r\n    marginTop: 30,\r\n    marginBottom: 10\r\n  },\r\n  container: {\r\n    marginHorizontal: 22\r\n  },\r\n  title: {\r\n    fontSize: 32,\r\n    fontFamily: 'Corbel-Bold',\r\n    marginBottom: 70\r\n  },\r\n  text: {\r\n    fontSize: 16,\r\n    fontFamily: 'Corbel',\r\n    marginLeft: 10\r\n  },\r\n  delete: {\r\n    fontFamily: 'Corbel',\r\n    fontSize: 16,\r\n    color: COLORS.primary\r\n  },\r\n  setDefault: {\r\n    borderTopWidth: 1,\r\n    borderBottomWidth: 1,\r\n    borderTopColor: '#506F9D',\r\n    borderBottomColor: '#506F9D',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between'\r\n  },\r\n  defaultText: {\r\n    fontFamily: 'Corbel-Bold',\r\n    fontSize: 16,\r\n    paddingVertical: 12\r\n  }\r\n})\r\n\r\nexport default SelectCardDefault\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}