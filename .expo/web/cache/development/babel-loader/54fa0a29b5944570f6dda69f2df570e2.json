{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { Snackbar } from 'react-native-paper';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport styles from \"./styles\";\nimport logo from \"../../assets/img/logo-login.png\";\nimport config from \"../../config/config\";\nimport { useRecoilState } from 'recoil';\nimport AuthStatus from \"../../assets/atoms/AuthStatus\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Signup = function Signup(props) {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      confirmPassword = _useState8[0],\n      setConfirmPassword = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      visible = _useState10[0],\n      setVisible = _useState10[1];\n\n  var onToggleSnackBar = function onToggleSnackBar() {\n    return setVisible(!visible);\n  };\n\n  var onDismissSnackBar = function onDismissSnackBar() {\n    return setVisible(false);\n  };\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      errorMsg = _useState12[0],\n      setErrorMsg = _useState12[1];\n\n  var _useState13 = useState(0),\n      _useState14 = _slicedToArray(_useState13, 2),\n      passLenght = _useState14[0],\n      setPassLenght = _useState14[1];\n\n  var _useRecoilState = useRecoilState(AuthStatus),\n      _useRecoilState2 = _slicedToArray(_useRecoilState, 2),\n      authStatus = _useRecoilState2[0],\n      setAuthStatus = _useRecoilState2[1];\n\n  function sendForm() {\n    var response, json, userData;\n    return _regeneratorRuntime.async(function sendForm$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch(config.urlRoot + \"signup\", {\n              method: 'POST',\n              headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                username: username,\n                email: email,\n                password: password,\n                confirmPassword: confirmPassword\n              })\n            }));\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 5:\n            json = _context.sent;\n\n            if (!(json.success === true)) {\n              _context.next = 14;\n              break;\n            }\n\n            console.log('Ok ' + json);\n            _context.next = 10;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('userData', JSON.stringify(json)));\n\n          case 10:\n            userData = _context.sent;\n            props.navigation.navigate('SignupStep1');\n            _context.next = 16;\n            break;\n\n          case 14:\n            setErrorMsg(json.message);\n            setVisible(true);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Snackbar, {\n      visible: visible,\n      onDismiss: onDismissSnackBar,\n      action: {\n        label: 'X'\n      },\n      theme: {\n        colors: {\n          onSurface: 'rgba(211, 47, 47, 0.8)',\n          surface: '#fff'\n        },\n        textAlign: 'center'\n      },\n      children: errorMsg\n    }), _jsxs(View, {\n      style: styles.loginLogomarca,\n      children: [_jsx(Image, {\n        style: styles.img,\n        source: logo\n      }), _jsx(Text, {\n        style: styles.title,\n        children: \"Create account\"\n      })]\n    }), _jsxs(View, {\n      style: styles.loginForm,\n      children: [_jsx(View, {\n        style: styles.inputBottom,\n        children: _jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Username\",\n          onChangeText: function onChangeText(text) {\n            return setUsername(text);\n          },\n          required: true\n        })\n      }), _jsx(View, {\n        style: styles.inputBottom,\n        children: _jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Your email\",\n          onChangeText: function onChangeText(text) {\n            return setEmail(text);\n          },\n          required: true\n        })\n      }), _jsx(View, {\n        style: styles.inputBottom,\n        children: _jsx(TextInput, {\n          style: styles.input,\n          secureTextEntry: true,\n          placeholder: \"Password\",\n          onChangeText: function onChangeText(text) {\n            return [setPassword(text), setPassLenght(text.length)];\n          }\n        })\n      }), _jsx(View, {\n        style: styles.inputBottom,\n        children: _jsx(TextInput, {\n          style: styles.input,\n          secureTextEntry: true,\n          placeholder: \"Confirm password\",\n          onChangeText: function onChangeText(text) {\n            return setConfirmPassword(text);\n          }\n        })\n      })]\n    }), _jsxs(View, {\n      style: styles.boxSignUp,\n      children: [_jsx(LinearGradient, {\n        style: styles.btnSignup,\n        colors: ['rgba(27,102,253,0.5)', '#DEE9FF'],\n        start: {\n          x: 0,\n          y: 0.6\n        },\n        end: {\n          x: 0,\n          y: 0\n        },\n        children: _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return sendForm();\n          },\n          children: _jsx(Text, {\n            style: styles.textBtnSignup,\n            children: \"Sign up\"\n          })\n        })\n      }), _jsx(LinearGradient, {\n        style: [styles.skipBtn, styles.btnSignup],\n        colors: ['rgba(27,102,253,0.5)', '#DEE9FF'],\n        start: {\n          x: 0,\n          y: 0.6\n        },\n        end: {\n          x: 0,\n          y: 0\n        },\n        children: _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            setAuthStatus({\n              isAuthenticated: true\n            });\n            props.navigation.navigate('HomeNav');\n          },\n          children: _jsx(Text, {\n            style: styles.textBtnSignup,\n            children: \"Skip\"\n          })\n        })\n      })]\n    })]\n  });\n};\n\nexport default Signup;","map":{"version":3,"names":["React","useState","AsyncStorage","Snackbar","LinearGradient","styles","logo","config","useRecoilState","AuthStatus","Signup","props","username","setUsername","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","visible","setVisible","onToggleSnackBar","onDismissSnackBar","errorMsg","setErrorMsg","passLenght","setPassLenght","authStatus","setAuthStatus","sendForm","fetch","urlRoot","method","headers","Accept","body","JSON","stringify","response","json","success","console","log","setItem","userData","navigation","navigate","message","container","label","colors","onSurface","surface","textAlign","loginLogomarca","img","title","loginForm","inputBottom","input","text","length","boxSignUp","btnSignup","x","y","textBtnSignup","skipBtn","isAuthenticated"],"sources":["E:/git_repo/tropical-techcom/front-end/views/Signup/index.tsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { TextInput, View, TouchableOpacity, Text, Image } from 'react-native'\r\nimport AsyncStorage from '@react-native-async-storage/async-storage'\r\nimport { Button, Snackbar } from 'react-native-paper'\r\nimport { LinearGradient } from 'expo-linear-gradient'\r\n\r\nimport styles from './styles'\r\nimport logo from '../../assets/img/logo-login.png'\r\nimport config from '../../config/config'\r\nimport { useRecoilState } from 'recoil'\r\nimport AuthStatus from '../../assets/atoms/AuthStatus'\r\n\r\nconst Signup = (props) => {\r\n  const [username, setUsername] = useState(null)\r\n  const [email, setEmail] = useState(null)\r\n  const [password, setPassword] = useState(null)\r\n  const [confirmPassword, setConfirmPassword] = useState(false)\r\n  const [visible, setVisible] = useState(false)\r\n  const onToggleSnackBar = () => setVisible(!visible)\r\n  const onDismissSnackBar = () => setVisible(false)\r\n  const [errorMsg, setErrorMsg] = useState(null)\r\n  const [passLenght, setPassLenght] = useState(0)\r\n\r\n  const [authStatus, setAuthStatus] = useRecoilState(AuthStatus)\r\n\r\n  //Envio do form\r\n  async function sendForm() {\r\n    let response = await fetch(`${config.urlRoot}signup`, {\r\n      method: 'POST',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        username: username,\r\n        email: email,\r\n        password: password,\r\n        confirmPassword: confirmPassword\r\n      })\r\n    })\r\n    let json = await response.json()\r\n    if (json.success === true) {\r\n      console.log('Ok ' + json)\r\n      let userData = await AsyncStorage.setItem('userData', JSON.stringify(json))\r\n      props.navigation.navigate('SignupStep1')\r\n    } else {\r\n      setErrorMsg(json.message)\r\n      setVisible(true)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Snackbar\r\n        visible={visible}\r\n        onDismiss={onDismissSnackBar}\r\n        action={{\r\n          label: 'X'\r\n        }}\r\n        theme={{\r\n          colors: {\r\n            onSurface: 'rgba(211, 47, 47, 0.8)',\r\n            surface: '#fff'\r\n          },\r\n          textAlign: 'center'\r\n        }}\r\n      >\r\n        {errorMsg}\r\n      </Snackbar>\r\n      <View style={styles.loginLogomarca}>\r\n        <Image style={styles.img} source={logo} />\r\n        <Text style={styles.title}>Create account</Text>\r\n      </View>\r\n\r\n      <View style={styles.loginForm}>\r\n        <View style={styles.inputBottom}>\r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder=\"Username\"\r\n            onChangeText={(text) => setUsername(text)}\r\n            required={true}\r\n          />\r\n        </View>\r\n        <View style={styles.inputBottom}>\r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder=\"Your email\"\r\n            onChangeText={(text) => setEmail(text)}\r\n            required={true}\r\n          />\r\n        </View>\r\n        <View style={styles.inputBottom}>\r\n          <TextInput\r\n            style={styles.input}\r\n            secureTextEntry={true}\r\n            placeholder=\"Password\"\r\n            onChangeText={(text) => [setPassword(text), setPassLenght(text.length)]}\r\n          />\r\n        </View>\r\n        <View style={styles.inputBottom}>\r\n          <TextInput\r\n            style={styles.input}\r\n            secureTextEntry={true}\r\n            placeholder=\"Confirm password\"\r\n            onChangeText={(text) => setConfirmPassword(text)}\r\n          />\r\n        </View>\r\n      </View>\r\n      <View style={styles.boxSignUp}>\r\n        <LinearGradient\r\n          style={styles.btnSignup}\r\n          colors={['rgba(27,102,253,0.5)', '#DEE9FF']}\r\n          start={{ x: 0, y: 0.6 }}\r\n          end={{ x: 0, y: 0 }}\r\n        >\r\n          <TouchableOpacity onPress={() => sendForm()}>\r\n            <Text style={styles.textBtnSignup}>Sign up</Text>\r\n          </TouchableOpacity>\r\n        </LinearGradient>\r\n        <LinearGradient\r\n          style={[styles.skipBtn, styles.btnSignup]}\r\n          colors={['rgba(27,102,253,0.5)', '#DEE9FF']}\r\n          start={{ x: 0, y: 0.6 }}\r\n          end={{ x: 0, y: 0 }}\r\n        >\r\n          <TouchableOpacity\r\n            onPress={() => {\r\n              //   props.navigation.navigate('Signup')\r\n              setAuthStatus({\r\n                isAuthenticated: true\r\n              })\r\n              props.navigation.navigate('HomeNav')\r\n            }}\r\n          >\r\n            <Text style={styles.textBtnSignup}>Skip</Text>\r\n          </TouchableOpacity>\r\n        </LinearGradient>\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default Signup\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}